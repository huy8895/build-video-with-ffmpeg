name: 🌐 Translate SRT from Google Drive

on:
  workflow_dispatch:
    inputs:
      env:
        description: 'Chọn môi trường (ose, mep, dde)'
        required: true
        default: 'ose'
        type: choice
        options:
          - ose
          - mep
          - cdp
      folder_url:
        description: "Google Drive folder URL chứa file SRT gốc"
        required: true
      source_srt_filename:
        description: "Tên file SRT gốc trong folder (ví dụ: raw_cn.srt)"
        required: true
        default: "raw_cn.srt"
      languages:
        description: "Danh sách ngôn ngữ đích, cách nhau bằng dấu phẩy (ví dụ: English, Vietnamese, Japanese)"
        required: true
        default: "English, Vietnamese, Japanese"
      model:
        description: 'Gemini model (ví dụ gemini-2.5-pro)'
        required: false
        default: 'gemini-2.5-pro'
      thinking_budget:
        description: 'Thinking budget (-1 dynamic, 0 off, or positive int)'
        required: false
        default: '-1'

jobs:
  translate-and-upload:
    runs-on: ubuntu-latest
    environment:
      name: ${{ inputs.env }}
    env:
      FOLDER_URL:       ${{ inputs.folder_url }}
      GG_REFRESH_TOKEN: ${{ secrets.GG_REFRESH_TOKEN }}
      YT_CLIENT_ID:     ${{ secrets.YT_CLIENT_ID }}
      YT_CLIENT_SECRET: ${{ secrets.YT_CLIENT_SECRET }}
      GEMINI_API_KEY:   ${{ secrets.GEMINI_API_KEY }}

    steps:
      - name: 📥 Checkout repository
        uses: actions/checkout@v4

      - name: 🐍 Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: 📦 Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install google-genai google-auth google-api-python-client

      - name: 📂 Download source SRT from Drive
        id: download_srt
        run: |
          set -euo pipefail
          SOURCE_FILE="${{ inputs.source_srt_filename }}"
          python scripts/download_drive_folder_files.py "$SOURCE_FILE"
          
          if [ ! -f "input/$SOURCE_FILE" ]; then
            echo "::error::Failed to download $SOURCE_FILE from Google Drive."
            exit 1
          fi
          
          echo "SRT_PATH=input/$SOURCE_FILE" >> $GITHUB_ENV
          echo "SRT_BASE_NAME=$(basename "$SOURCE_FILE" .srt)" >> $GITHUB_ENV
          echo "Downloaded file:"
          ls -lh "input/$SOURCE_FILE"

      # ────────────────────────────────────────────────
      # 2. Lặp qua các ngôn ngữ và dịch (ĐÃ CẬP NHẬT LOGIC LỖI)
      # ────────────────────────────────────────────────
      - name: 🔄 Translate for each language (with error skipping)
        id: run_translations
        run: |
          # KHÔNG dùng 'set -e' ở đây để có thể xử lý lỗi trong vòng lặp
          set -uo pipefail

          SUCCESSFUL_FILES=""
          FAILED_LANGS=() # Mảng để lưu các ngôn ngữ bị lỗi

          # Chuyển đổi chuỗi "lang1, lang2" thành một mảng để lặp
          IFS=',' read -r -a LANG_ARRAY <<< "${{ inputs.languages }}"

          for lang_raw in "${LANG_ARRAY[@]}"; do
            lang=$(echo "$lang_raw" | xargs) # Trim whitespace
            echo "---"
            echo "🚀 Starting translation to: '$lang'"
            
            SAFE_LANG=$(echo "$lang" | tr ' ' '_')
            OUT_PATH="output/${{ env.SRT_BASE_NAME }}.${SAFE_LANG}.srt"
            mkdir -p output

            # Chạy lệnh dịch và kiểm tra mã thoát của nó
            # Nếu lệnh không thành công (!), nó sẽ vào khối 'if'
            if ! python scripts/translate_srt.py \
              --input "${{ env.SRT_PATH }}" \
              --language "$lang" \
              --output "$OUT_PATH" \
              --model "${{ inputs.model }}" \
              --thinking-budget "${{ inputs.thinking_budget }}"; then
              
              # Ghi lại lỗi và tiếp tục vòng lặp
              echo "::warning::Translation to '$lang' failed. Skipping this language."
              FAILED_LANGS+=("$lang")
            else
              # Nếu thành công, thêm file vào danh sách để upload
              echo "✅ Translation to '$lang' succeeded. Output: $OUT_PATH"
              SUCCESSFUL_FILES="$SUCCESSFUL_FILES $OUT_PATH"
            fi
          done

          # Lưu danh sách các file thành công vào biến môi trường
          echo "ALL_TRANSLATED_FILES=${SUCCESSFUL_FILES# }" >> $GITHUB_ENV

          # KIỂM TRA CUỐI CÙNG: Nếu có bất kỳ lỗi nào, làm cho job thất bại
          echo "---"
          echo "📊 Translation Summary:"
          if [ ${#FAILED_LANGS[@]} -ne 0 ]; then
            # Dùng ::error:: để GitHub Actions nhận diện đây là lỗi
            echo "::error::Job finished with errors. The following languages failed: ${FAILED_LANGS[*]}"
            exit 1
          else
            echo "✅ All languages translated successfully!"
          fi

      - name: ☁️ Upload all results to Drive
        run: |
          if [ -z "${{ env.ALL_TRANSLATED_FILES }}" ]; then
            echo "No files were successfully translated. Skipping upload."
          else
            echo "Uploading successfully translated files: ${{ env.ALL_TRANSLATED_FILES }}"
            export UPLOAD_FILES="${{ env.ALL_TRANSLATED_FILES }}"
            python scripts/upload_results_to_drive.py
          fi

      - name: 📜 Show a preview of generated files
        run: |
          echo "✅ Translation process completed."
          echo "Generated files:"
          ls -lhR output/